{
  "openapi": "3.0.3",
    "servers": [{
      "url": "http://localhost:3000/api"

    }],
    "info": {
      "version": "1.0.0", 
      "title": "My User Project CRUD",
      "description": "My User Project Application API",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host":"localhost:3000/",
    "basePath": "api",
    
    "tags": [
      {
        "name": "Users",
        "description": "API for users in the system"
      }, {
        "name": "Posts",
        "description": "API for posts in the system"
      }
    ],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
        "/users": {
          "post": {
            "tags": ["Users"],
            "summary": "Register user",
            "description": "Register user",
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "full_name": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "role_id": {
                          "type": "string"
                        }
                    }
                  }
                }
              }
            },
            "produces": ["application/json"],
            "responses": {
              "200": {
                "description": "Register successful",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        },
      "/users/login": {
        "post": {
          "tags": ["Users"],
          "summary": "Login",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                      "email": {
                          "type": "string"
                      },
                      "password": {
                          "type": "string"
                      }
                  }
                }
              }
            }
          },
          
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Login successfull",
              "schema": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "refreshToken": {
                        "type": "string"
                    }
                }
              }
            }
          }
        }
      },
      
      "/users/{id}": {
        "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of user that we want to find",
              "type": "integer"
            },
            {
                "name": "x-access-token",
                "in": "header",
                "description": "You must login first, then return token, copy this token and paste below. To authentication this account.",
                "type": "string"
            }
          ],
        "get": {
          "tags": ["Users"],
          "summary": "Get user by id",
          "description": "Only works for myself, or admin",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "patch": {
            "summary": "Update user with give ID",
            "tags": ["Users"],
            "parameters": [
              {
                  "name": "x-access-token",
                  "in": "header",
                  "description": "You must login first, then return token, copy this token and paste below. To authentication this account.",
                  "type": "string"
              }
            ],
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "full_name": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "phone": {
                          "type": "string"
                      },
                      "role_id": {
                        "type": "integer"
                    }
                  }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "User is updated",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
        "delete": {
        "summary": "Delete user with given ID",
        "description": "Only works for admin",
        "tags": ["Users"],
        "responses": {
            "200": {
            "description": "User is deleted",
            "schema": {
                "$ref": "#/definitions/User"
            }
            }
        }
        }
      },
      "/users/{roleId}/list":{
        "parameters": [
            {
              "name": "roleId",
              "in": "path",
              "required": true,
              "description": "ID of user that we want to find",
              "type": "integer"
            },
            {
                "name": "x-access-token",
                "in": "header",
                "description": "You must login first, then return token, copy this token and paste below. To authentication this account.",
                "type": "string"
            }
          ],
        "get": {
          "tags": ["Users"],
          "summary": "Get user by role id",
          "description": "Only works for admin",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
      }
    },
    "/users/refresh-token": {
        "post": {
            "tags": ["Users"],
            "summary": "Refresh token",
            "description": "Refresh token",
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                        "refreshToken": {
                            "type": "string"
                        }
                    }
                  }
                }
              }
            },
            "responses": {
                "200": {
                  "description": "OK",
                  "schema": {
                    "type": "object",
                    "properties": {
                        "token": {
                            "type": "string"
                        }
                    }
                  }
                }
              }
        }
    },
    "/users/forgot-password": {
      "post": {
        "tags": ["Users"],
        "summary": "Forgot password token",
        "description": "Server will send to available email link to reset password.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                      "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                }
              }
            }
          }
    }
    },
    "/users/reset-password": {
      "put": {
        "tags": ["Users"],
        "summary": "Reset password by resetPassToken",
        "description": "Server will send to available email link to reset password.",
        "parameters": [
            {
              "name": "email",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                    "reshPassToken":{
                        "type": "string"
                    },
                    "password":{
                        "type": "string"
                  }
                }
              }
            }
          ],
        "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
      }
    }




      ,
      "/posts":{
        "get": {
            "tags": ["Posts"],
            "summary": "Get all post",
            "description": "Only pass the parameters needed. If no pass parameter, this API will get all posts only work for admin. ",
            "parameters": [
            {
                "name": "x-access-token",
                "in": "header",
                "description": "You must login first, then return token, copy this token and paste below. To authentication this account.",
                "type": "string"
            }, {
                "name": "page",
                "in": "query",
                "description": "Number of page currently. (default page = 1)",
                "type": "integer"
            }, {
                "name": "sort",
                "in": "query",
                "description": "(Options) Sort by 'price', 'views' or 'created_at' (default sort = 'price')",
                "type": "string"
            }, {
                "name": "direct",
                "in": "query",
                "description": "(Options) Direction to sort by 'asc', 'desc' (default direct = 'desc')",
                "type": "string"
            }, {
                "name": "filter",
                "in": "query",
                "description": "(Options) Filter by 'price' or 'address'. If filter by 'price': pass 'min', 'max' parameters else filter by 'address': pass 'city', 'district', 'ward', 'street' parameters",
                "type": "string"
            }, {
                "name": "min",
                "in": "query",
                "description": "(Options) If filter is 'price'. Min price to filter",
                "type": "string"
            }, {
                "name": "max",
                "in": "query",
                "description": "(Options) If filter is 'price'. Max price to filter",
                "type": "string"
            } ,
            {
                "name": "city",
                "in": "query",
                "description": "(Options) If filter is 'address'. City that you want to filter",
                "type": "string"
            }, {
                "name": "district",
                "in": "query",
                "description": "(Options) If filter is 'address'. District that you want to filter",
                "type": "string"
            }, {
                "name": "ward",
                "in": "query",
                "description": "(Options) If filter is 'address'. Ward that you want to filter",
                "type": "string"
            }, {
                "name": "street",
                "in": "query",
                "description": "(Options) If filter is 'address'. Street that you want to filter",
                "type": "string"
            }, {
                "name": "search",
                "in": "query",
                "description": "(Options) Search by title or content of posts",
                "type": "string"
            }
            ],
            "responses": {
              "200": {
                "description": "OK",
                "schema": {
                  "$ref": "#/definitions/Posts"
                }
              }
            }
        }
        ,
        "post": {
          "tags": ["Posts"],
          "summary": "Create new post",
          "description": "Create new post",
          "requestBody": {
            "content": {
              "multipart/form-data":{
                "schema": {
                  "type": "object",
                  "properties":{
                    "images":{
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    },
                    "title": {
                      "type": "string"
                    },
                    "content": {
                      "type": "string"
                      },
                    "price": {
                      "type": "number"
                    },
                    "phone": {
                      "type": "string"
                        },
                    "status": {
                        "type": "string"
                    },
                    "views": {
                      "type": "integer"
                        },
                    "city": {
                        "type": "string"
                    },
                    "district": {
                      "type": "string"
                        },
                    "ward": {
                        "type": "string"
                    },
                    "street": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Create new post successful",
              "schema": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      },
      "/posts/{id}": {
        "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of posts that we want to find",
              "type": "integer"
            },
            {
                "name": "x-access-token",
                "in": "header",
                "description": "You must login first, then return token, copy this token and paste below. To authentication this account.",
                "type": "string"
            }
          ]
        ,
        "get" :{
          "tags": ["Posts"],
          "summary": "Get post by id",
          "description": "Only works for user who own has this posts, or admin",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        },
        "patch": {

          "summary": "Update post with give ID",
          "tags": ["Posts"],
          "parameters": [
            {
                "name": "x-access-token",
                "in": "header",
                "description": "You must login first, then return token, copy this token and paste below. To authentication this account.",
                "type": "string"
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "images":{
                      "description": "Image list needed to insert",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"  
                      }
                    },
                    "delList":{
                      "description": "Image list needed to delete. Import path of name of image",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["str1", "str2", "str3"]
                    },
                    "title":{
                      "type": "string"
                    },
                    "content":{
                      "type": "string"
                    },
                    "price":{
                      "type": "integer"
                    },
                    "phone":{
                      "type": "string"
                    },
                    "status":{
                      "type": "string"
                    },
                    "city":{
                      "type": "string"
                    },
                    "district":{
                      "type": "string"
                    },
                    "ward":{
                      "type": "string"
                    },
                    "street":{
                      "type": "string"
                    }
                }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User is updated",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },

       
        "delete": {
          "summary": "Delete Post with given ID",
          "description": "Only works for admin",
          "tags": ["Posts"],
          "responses": {
              "200": {
              "description": "Post is deleted",
              "schema": {
                  "$ref": "#/definitions/Post"
              }
              }
          }
          }
        },
        "/posts/{id}/images":{
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of posts that we want to find",
              "type": "integer"
            },
            {
                "name": "x-access-token",
                "in": "header",
                "description": "You must login first, then return token, copy this token and paste below. To authentication this account.",
                "type": "string"
            }
          ]
        ,
        "get" :{
          "tags": ["Posts"],
          "summary": "Get image path by post id",
          "description": "Only works for user who own has this posts, or admin",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
        }

    },
      "definitions": {
        "User": {
          "required": ["id", "email", "password", "role_id"],
          "properties": {
            "id": {
                "type": "integer",
                "uniqueItems": true
            },
            "full_name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "uniqueItems": true
              },
            "password": {
              "type": "string"
            },
            "phone": {
                "type": "string"
              },
            "created_at": {
                "type": "string",
                "format": "date-time"
            },
            "updated_at": {
                "type": "string",
                "format": "date-time"
            },
            "reset_password_token": {
              "type": "string"
                },
            "role_id": {
                "type": "integer"
            }
          }
        },
        "Users": {
          "type": "array",
          "$ref": "#/definitions/User"
        },
        "Post": {
            "required": ["id", "email", "password", "role_id"],
            "properties": {
              "id": {
                  "type": "integer",
                  "uniqueItems": true
              },
              "full_name": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "uniqueItems": true
                },
              "password": {
                "type": "string"
              },
              "phone": {
                  "type": "string"
                },
              "created_at": {
                  "type": "string",
                  "format": "date-time"
              },
              "updated_at": {
                  "type": "string",
                  "format": "date-time"
              },
              "reset_password_token": {
                "type": "string"
                  },
              "role_id": {
                  "type": "integer"
              }
            }
          },
          "Posts": {
            "type": "array",
            "$ref": "#/definitions/User"
          }
      }
  }

  
